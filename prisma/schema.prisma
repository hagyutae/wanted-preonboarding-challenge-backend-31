// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          BigInt      @id @default(autoincrement())
  name        String      @db.VarChar(100)
  slug        String      @unique @db.VarChar(100)
  description String?     @db.Text
  parentId    BigInt?
  level       Int
  imageUrl    String?     @db.VarChar(255)
  parent      Category?   @relation("CategoryToCategory", fields: [parentId], references: [id])
  children    Category[]  @relation("CategoryToCategory")
  products    ProductCategory[]
}

model Seller {
  id           BigInt    @id @default(autoincrement())
  name         String    @db.VarChar(100)
  description  String?   @db.Text
  logoUrl      String?   @db.VarChar(255)
  rating       Decimal?  @db.Decimal(3, 2)
  contactEmail String?   @db.VarChar(100)
  contactPhone String?   @db.VarChar(20)
  createdAt    DateTime  @default(now()) @db.Timestamp
  products     Product[]
}

model Brand {
  id          BigInt    @id @default(autoincrement())
  name        String    @db.VarChar(100)
  slug        String    @unique @db.VarChar(100)
  description String?   @db.Text
  logoUrl     String?   @db.VarChar(255)
  website     String?   @db.VarChar(255)
  products    Product[]
}

model Product {
  id               BigInt             @id @default(autoincrement())
  name             String             @db.VarChar(255)
  slug             String             @unique @db.VarChar(255)
  shortDescription String?            @db.VarChar(500)
  fullDescription  String?            @db.Text
  createdAt        DateTime           @default(now()) @db.Timestamp
  updatedAt        DateTime           @default(now()) @db.Timestamp
  sellerId         BigInt
  brandId          BigInt
  status           String             @db.VarChar(20)
  seller           Seller             @relation(fields: [sellerId], references: [id])
  brand            Brand              @relation(fields: [brandId], references: [id])
  details          ProductDetail?
  prices           ProductPrice[]
  categories       ProductCategory[]
  optionGroups     ProductOptionGroup[]
  images           ProductImage[]
  tags             ProductTag[]
  reviews          Review[]
}

model ProductDetail {
  id                BigInt   @id @default(autoincrement())
  productId         BigInt   @unique
  weight            Decimal? @db.Decimal(10, 2)
  dimensions        Json?
  materials         String?  @db.Text
  countryOfOrigin   String?  @db.VarChar(100)
  warrantyInfo      String?  @db.Text
  careInstructions  String?  @db.Text
  additionalInfo    Json?
  product           Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductPrice {
  id         BigInt   @id @default(autoincrement())
  productId  BigInt
  basePrice  Decimal  @db.Decimal(12, 2)
  salePrice  Decimal? @db.Decimal(12, 2)
  costPrice  Decimal? @db.Decimal(12, 2)
  currency   String   @default("KRW") @db.VarChar(3)
  taxRate    Decimal? @db.Decimal(5, 2)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductCategory {
  id         BigInt   @id @default(autoincrement())
  productId  BigInt
  categoryId BigInt
  isPrimary  Boolean  @default(false)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model ProductOptionGroup {
  id           BigInt           @id @default(autoincrement())
  productId    BigInt
  name         String           @db.VarChar(100)
  displayOrder Int              @default(0)
  product      Product          @relation(fields: [productId], references: [id], onDelete: Cascade)
  options      ProductOption[]
}

model ProductOption {
  id             BigInt         @id @default(autoincrement())
  optionGroupId  BigInt
  name           String         @db.VarChar(100)
  additionalPrice Decimal       @default(0) @db.Decimal(12, 2)
  sku            String?        @db.VarChar(100)
  stock          Int            @default(0)
  displayOrder   Int            @default(0)
  optionGroup    ProductOptionGroup @relation(fields: [optionGroupId], references: [id], onDelete: Cascade)
  images         ProductImage[]
}

model ProductImage {
  id           BigInt        @id @default(autoincrement())
  productId    BigInt
  url          String        @db.VarChar(255)
  altText      String?       @db.VarChar(255)
  isPrimary    Boolean       @default(false)
  displayOrder Int           @default(0)
  optionId     BigInt?
  product      Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  option       ProductOption? @relation(fields: [optionId], references: [id], onDelete: SetNull)
}

model Tag {
  id        BigInt        @id @default(autoincrement())
  name      String        @db.VarChar(100)
  slug      String        @unique @db.VarChar(100)
  products  ProductTag[]
}

model ProductTag {
  id        BigInt  @id @default(autoincrement())
  productId BigInt
  tagId     BigInt
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model User {
  id        BigInt    @id @default(autoincrement())
  name      String    @db.VarChar(100)
  email     String    @unique @db.VarChar(100)
  avatarUrl String?   @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamp
  reviews   Review[]
}

model Review {
  id              BigInt    @id @default(autoincrement())
  productId       BigInt
  userId          BigInt?
  rating          Int
  title           String?   @db.VarChar(255)
  content         String?   @db.Text
  createdAt       DateTime  @default(now()) @db.Timestamp
  updatedAt       DateTime  @default(now()) @db.Timestamp
  verifiedPurchase Boolean  @default(false)
  helpfulVotes    Int       @default(0)
  product         Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  user            User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
}
